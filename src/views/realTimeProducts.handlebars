<h1>Lista de Productos en Tiempo Real</h1>

<ul id="product-list">
  {{#each products}}
    <li>
     {{this.id}} - {{this.title}} - {{this.stock}} - ${{this.price}}
      <button onclick="deleteProduct({{this.id}})">Eliminar</button>
    </li>
  {{/each}}
</ul>

<h2>Agregar nuevo producto</h2>
<form id="productForm">
  <input type="text" name="title" placeholder="Nombre" required>
  <input type="text" name="description" placeholder="Descripción" required>
  <input type="text" name="code" placeholder="Código" required>
  <input type="number" name="price" placeholder="Precio" required>
  <input type="number" name="stock" placeholder="Stock" required>
  <input type="text" name="category" placeholder="Categoría" required>
  <input type="text" name="thumbnails" placeholder="Thumbnail (URL)">
  <button type="submit">Agregar</button>
</form>

<script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io();

  const form = document.getElementById('productForm');
  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(form);
    const data = Object.fromEntries(formData);
    data.status = true;
    if (data.thumbnails) {
      data.thumbnails = [data.thumbnails];
    } else {
      data.thumbnails = [];
    }

    const response = await fetch('/api/products', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(data)
    });

    if (response.ok) {
      form.reset();
    }
  });

  socket.on('updateProducts', (products) => {
    const list = document.getElementById('product-list');
    list.innerHTML = '';
    products.forEach((product) => {
      const li = document.createElement('li');
     li.innerHTML = `${product.id} - ${product.title} - ${product.stock} - $${product.price} 
    <button onclick="deleteProduct(${product.id})">Eliminar</button>`;
      list.appendChild(li);
    });
  });

  async function deleteProduct(productId) {
    if (confirm('¿Estás seguro que querés eliminar este producto?')) {
      try {
        const response = await fetch(`/api/products/${productId}`, {
          method: 'DELETE',
        });

        if (response.ok) {
          console.log('Producto eliminado');
          // El servidor ya emite "updateProducts", entonces se actualiza la lista
        } else {
          console.error('Error al eliminar producto');
        }
      } catch (error) {
        console.error('Error en la solicitud de eliminación', error);
      }
    }
  }
</script>